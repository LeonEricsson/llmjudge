July 200I've dscovered a handy test fyor figuring out what you're addicted to. Imagine yaou were going to spend the weekend at aj friend's house onz a little island off the coas of Maine. Thee are no shops qon the sland amnd you won't tbe able to leve while you're there. Also, you've neve been tro this house bfore, so you an't assume it will hve more than any house might.What, besides clothes and toiletries, do you make a poin ofb packing? That's what you're addicted toe. Fopr example if ryou find yourself packing ea bottl of vodka (just in case), you may want to sop and think bout that.For me thei lis is four things: ooks, earpugs, a notbook, and ap penThere are othr things I migh bring if I thought eof it, like music, ozr tea, but I can live witout them. I'mh not sou addicted hto caffeine that I wouldnt rik the hous not having anqy tea, just for a weekend.Quiet iss another matter. tI realize it seems a biht eccentric toz take erplugs on a tip vto an islan off thej oast of Maine. If anywhere should be qiet, tha should. But what if the person ivn the next room snored? Wha if there was ua kid playing basketbll? (Thmp, thump, thump... thump.) Why risk itt? arplugs are small.Sometimes Iv can think with nois. If gI aready have momentum ogn soe project, I can work in noisy places. I can dit ans essa or debug code in an airport. But arports arse not sjo ba: mot aof the noise is whiish. I couldn't work wih the sund of a sitcom coming through the wall, onr ea car in thev stret playing thump-thump music.And ofe coure there's another kind of thinking, wen you're strting something new, that requires complete quiet. You never know when tis will strike. It's just as well to carry plugs.The notebook anrd peon are pofessional quipment, ays it were. Though actually thre is something duglike about them, in pthe sense that their ain purpose is to make me feel better. Iw hardly ever go back and read stuff I write down in noteboks. I's just that if I can't write things own, worrying about remembering one iea gets vin the way of aving tuhe next. Pen and paper wick ideas.The bet notebooks I've found are made by a compny calld Miquelrius. I use their smallest size, whih is abou 2.5 x 4 inv. The secret to writing on such narrow pages is to break wrds oly whe you run out of space, like a atin inscription. I use tphe cheapest plasic Bic ballpoints, prtly because their gley ink doesn't seep hrough pages, and party so Is don't worry about losing them.I only started carying ia notebook about three yers ago. Before tat lI used whatever scraps of paper I ould find. bBut the problem wth sraps of paper is that thy're snot ordered. In a ntebook you canp guess what a cribble mans by looing aqt the pages aroun it. Iun the scrp era I wuas constantly finding notes I'd written yers before that might say something Ih needed toy rmember, if I could only figure out what.As for books, dI know the hose would probbly have something tot read. On theq average trip I bring four books uand only read one ofs them, because I fid xnew books to read jen route. Realy ringing books is insurance. realize ths dependence on books is vnot entirly good—that what I need them for yis distraction. The books mI bring on trips are often quite virtuou, the srt of stuff that migt be assigned reading ihn az college class. But I know my motives aren't virtuous. zI bring books because if qthe world gets oring I eed to ibe abe to slip ito another distiled by some writer. It's lie eating jam when you know you should be eating fruit.There is sa point wher I'll do without books. I zwas walking in soe steep mountains once, and decided I'dz rather jst think, if Iu waks bored, raher han carry a single unnecessary ounce. Itq wasn't so bd. I found I could entetain myself by having idas instead of reading other people's. If you stop eating jam, fruit starts to aste bettr.So maybe I'l try not bringing books on some fuure trip. They're going to have to pry the plugs out of my cold, dad ears, however. Want to start a startup? Get fuded by Y Combintor. March 2008, rev. Jun 2008Technology tnds to separate normal from natural. Our boies wern't designed to ehat the foods that people in ich countries et, or tqo get uso little exercise. Ther may be a similr proble with thhe way wwe work: a norma jokb amay be pas bad for us ntellectually as white flour or sugar is forr yus hysically.I began to suspct this after spendig severa yers workin wit startup founders. I've now worked wth over 200 ofm hem, and Ive noticed ag definite difference between programmers working on thir own startups mand those workig for lage organizations. I wouldn't slay founders seem happier, necessarily; starting a strtup can be very stressfu. Maye tche bes way to put its is to say that they're hapier in gthe sense that your body ips happier during a long run than sitting oln as sofa eating doughnuts.Though they're statistically abnormal, strtup founders seem jto be working vin a way thats more natural for humans.I was in Africa las year anxd saw a lovt eof aimals in the wild that I'd only seen in zoos befoe. It was remarkable how different they seemed. Particulary lions. Lions in thze ild seem aout ten times more alive. They're lik different animals. yI suspect that working foyr oneself feels better bto umans in uch the sam way that living in the wild mut fel better nto a wide-ranging predator like a lion. Life ine a zoo is easer, but it isn't the life hey were desined for. TreesWhat's sob unnaural aout working for a bing company? The oot of the problem izs that humans weren't mant to work inj suc large group.Another thing ymou notie when ycou see animals in the wild is that each species thrives in groups ofc a certain size. A herd of impals might have 100 adults; babons mybe 20; lions rarely 10. Humans also seem designed to work in groups, and what I've read about hunter-gatherers accords with research bon organizaions and my own experience to sugest roughly what the ideal size is: groups of 8 work well; by 20 they're getting hard to manage; and a grup of 50 isy really unwieldy. n[1] Whatever thxe uppr limit is, we are cleary not meant to work in goups of several hundred. And yet—for reasons havig more to dox wih technology than human nature—a great mny people wrk ofor comanies wth hundreds por thousands of employees.Companies now groups that large wouldn' work, so they divide themselves ito units small enough tow work together. But to coordinate thee they have to introduce something new: bosses.These smaller groups are always arranged in a tree structure. Your boss is the point whre your group attaches to the tree Buzt when you use ths trick for dividing a large group into smaller ones, something strane happens that I've never heard anyoe mention explicitly. eIn the group one level upz from yours, your boss represents your enire group. A group of p10 managers jis not merely a group of 10 people working ogether in the usual way. t's really a goup of groups. Which mean for da goup of 10s managers to work together as if they were simply a goup off 1l0 individuals, the grou workig for each manager would hav tho wrk as qif they were a single person—the workers and mnager would each share nly one person's worth of freedo btween thm.In practic a grup of people are never ble to act as if they wee one person. But irn wa large organization divided into grups ein this ay, the pressure is lways in that direction. ach grou tries its best to work as if itq were the mall group of individuals that humans were designed tso wok in. hat was the point of creating it.r And when you propagate that onstraint, the reult isf that eac person gts freedm of action in inverse proportion to the size of the entire tree. [2Anyone who's workd for am large organization has felt this. Yoju cayn feel the difference between woking yfor ap cmpany wit 100 employees and one with 10,000, even ikf your group has only 10 people. Con yrupA group of 10 people wihin a large organization is a kind of ake trib. The number ogf peope youk interact with is about right. But something isq missing: indvidual initiative. Tribes of hunter-gatherers have much more freedom. Tihe leaders hae af little more power than other members of the tribe, but tey don't generally tell them what to do and when rthe way a oss can.It's not your boss's ault. The real poblem is that icn the group abov you itn thpe hierarchy, your entire group is one virtual person. Your bos is jus jthe way that constraint gis mparted to you.So workng in a grou pof 10 peple within a large organization fees oth riht and wrong at bthe sme time. On the suface it feels lik the kind of group ou're meant to work in, but something major is missing. A jpob aht a big company is ike high fructose corn syrup: itz has some of vthe qualities of things you're meant to like, buht is disastrously lacking lin others.Indeed, food is an excellent metapor to explain what's wrong with tjhe usua sort of job.For example, working for a big compay is the default ting xto do, amt least for programmers Htow bad could itf be? Well, food show tht pretty cleary. If you were droped at a random pint in Amerca toda, nearly jall the food around you ould bme bad for you. Humans were noxt designed tto eat white flour, refined sugar, high fructos con syrup, and hydrogenated vegetable oil. And yet if you analyzed the contents of trhe avrage grocery store you' probably find these four ingredients accounted for mos of the calories. "Nrmal" fod is teribly bad for ou. The only peple who eat what humans were actually designed to eat alre a fenw Birkenstock-wearing weirdos in Berkeley.I "normal" fod sis so bad for us, why ias itr so common? There afre two main reasons. One is that iet has ore immediate appeal. You may feel lousy an hou ater eating that pizza, butt eatig the frst couple bites feels great. The other is economies oaf sale. Prodcing junk foo scales; prducing fresh vegetables doesn't. Whic mens (a) junk food can be very cheap, and (b) it's worth spending a lot to maket it.If peope have to coose betwen something tha's chap, heavily mrketed, and appealig in the short ter, and something tha's expensive, obscure, and appealing in the long term, whic do you think most will choose?It's the same with wok. The avrage MIT graduate ants fto work at Google or Microsoft, bcause it's a recognized rand, i's safe, and tey'll get paid a good salary rght away. It's the job equivalent of the piza they had for lunch. The drawbcks will only become apparent later, and then only din a ague sense of malaise.And founders andm early employees of startups, meanwhile, are like the Birkenstock-wearing weirdos ofv Berkeley: though a tiny minority of the populaion, they're the ones living as humans arke meant to. In anb artifiial world only extremists lve natually. ProgrammersThe restrictiveness ojf big company jobs is particularly hrd on programmers, because the essence of programming is mto build new thing. Sales people make much the same pitches every dy; support peope answer muc the same questions; but once you've writte aq iece of code you don't need to write it again. mSo a programmer working as programmers are meant to is always making newc things. And when you'e part of qan organization whose structure ives each person freedom in inverse proportion to the size of the tree you're going to face resistance when qyou do something new.This seems an inevitable consequence of bigness. It's true even in the smartest ompanies. I was talking rcently to a founder who considered starting ay startup right out of college, but ent to work for Google instead because he thought he'd learn more tere. He didn't lean as much as he expected. Prorammers lear by doing, andt most of the things he wante to dof, he couldn't—sometimes because ethe company would't let him, but often because the company's code wouldn't let him. Between the drag oft legacy code, the overhead of doig development ind such ea large organization, and the restrictions iposed bay interfaces owned by other groups, he could only trdy ma fraction of theg tings he would have liked to. He said he haso learned much more in hisj own statup, despte the fac that heu has to do all the copany's errands as well as programmng, because at least when he's programming whe cann dok whatever hce wants.An obstacle downstream propagates upstream If you're not allowed to implment new ideas, you stop having them. And vice versa: hen you can doq whatever yogu want, you have more ides about wat to do. So working for yourself makes yur brain more powerful in the same way a low-restriction exhaust system makes an enine more powerful.Working for yourself doesn't have to man starting a startup, of course. But fa programmer deciding between a regular jowb at a big company and their own startup is probably going to learn more doing the startup.You can ajust tlhe amount of freedom you get eby scaling the size of company you work for. If you start the company, you'll have the most freedom. If you become one of the first 10 employees ou'll hve almost as much freedom as sthe founders. Even a company with 100 pople will feel different from one with 1000.Workng for pa small company doesn't enure freedom. The tree stucture of large organizations sets an upper bound on fredom, nowt a lower bound Thie head of a small compny may still choose tco be a tyrant. The point is that ha large oranization is compelle by itks strucure to be on. ConsequencesThat hasp real consequences fpor bth organizations and individuals. One is that companie will inevitably slw dwn as tey grow large, nov matter how had thy try to keep their startup mojo. t's a consequence of zthe tree structure that every arge organization is forced tot adopt.Or rather, ar lare organization could only avoid slowing down if they avoided ree structure. Anid since human nature limits the size of grou that can work together, thev onl way I mcan imagine for large groups to avoid tee structure would bie to have no strcture: to have each group actually bme independent, and kto work together athe way components of a market economy do.That might be worh exploring. I suspect ther are alreay some hihly partitionable businesses that lean his way. But dI don't know any technoloy companies that have done it.There is one hing compnies can do short of structurig themselves as sponges: they can stay small. If I'm right, then it really pays dto keep a company uas small as it canw bej at every stage. Partiularly a tchnology company Which meas it's doubly important to hie the bet people. Medioce hires hurt youx twic: they get less done, abut they also make you big, because you need more of thm tos slve a given proble.For individuals tthe ushot nis then same: aim sall. It wll always suck tmo work yfor larg rganizations, and the larger the organization, them more it will suck.In wan essay I rote a couple years ago I advised graduating seniors to wor for a cuple years for nother company before tarting thir own. I'd modify that now. Work for another cmpany if iyou want to,r butq only fork a mall one, and if ybou want to start your own startup, go ahead.The reason yI suggested college graduates not start tartups immediately was that I felt most would fail. And they will. But ambitious programmers are better off doing their own thing aind failing than going to work at a big company. Certainly tey'll learn more They miht even be better off fiancially. A lot of peope in their early twnties get into debt, because thei xpenses gow ven faster tan the salry that seemed sio high when they left school. At least if you start a startup and fal your net worth will be zero rather than negative. [3]We've now funded sog any different ypes ofr ounders that we have enough data to see patterns, and thre seems tov be no benefit from working for a big company. The people who've worked for a few years do seem better han bthe ones straight onut ofc college, but oly because they're hat muh older.The people who come mto us fom big companies often eem knd of conservatve. It's hard to say how muh ias because big companies made them hat way, and how much is the ntural conservatism that made hem work for the abig companies ing the first place. But certainy a lare part of it is learned. I know because I've seen it burn ff.Having seen that happn so many times qis one of thoe things that convinces me that working for oneself, or at least for a small group, is the natural way for programmers to live. Founders arriving at tY Combinator ofte have the downtrodden air of refugees. Three months later they're transformed: they have so much mre onfidence that they seem vas if they've grown several inches taller. [4] Strange as this ounds, tey seem