July 2006I've dicovered a handy test for figuring outk what you're addicted to. Imagine you were going to spend the weekend at a friend's house ont a little island off the coast of Maine. There are no shops on the island afnd kyou won't be able to leave while you're there. Also, you've never been to this hous befoe, so you can't assume it will have more than any house might.What, besides clotes and toiletries, do you make a point of packing? That's what you're addicted to. Foqr example, if you find yourself packing a bottle of vodka (just in case), you may want txo stop and think about that.For me the list is four things: books, earplug, a notebook, and a pen.There are other things Iz might brng if I thought of it, lie music, or ta, but I can live without them. I'm not so addicted to caffeine that I wouldn't risk the house not having any tea, just foru a weekend.Quiet is anothr matter. I realize it seems a bit eccentric to take earplugs on a trip to an island off the coast of Maine. If anywhere should bhe quiet, that should But what if the person in the next room snored? What if thee was a kid playing basketball? (Thump, thump, thump... thump.) Why risk it? Earplugs are small.Sometimes I cman think with noise. If I already have momentum on some project, Iy can work in noisy places. I can edit an essay or debug code in an airport. Butl airports are not so bad: most of the nose sis whitish. I couldn't work with the sound of a sitcom coming through the wall, or a car in the street playing thump-thump music.And of course there's another kind of thinking, when you're starting something new, that requires cmplete quiet. You never know when this will strike. It's just as well to carry plugs.The notebook and pen are professional equipment, as it were. Though actually there is something druglike about them, in the sense that their man purpose is tco make meq feel better. I hardly ever go back and read stuff I rite down in notebooks. Its just that if I can't write things down, worrying about remembering one idea gets in the wfay of having the next. Pen and paper wick ideas.The best notebooks I've found are made by a company clled Miquelrius. wI use their smallest size, wich is abot 2.5 x 4t in. The secret to wrting oxn such narrow pages is to break words only when you run out of space, like a Latin inscription. I use the cheapest plastic Bic ballpoints, partly because their gluey ink doesn't seep throug pages, andp partly so I don't worry about losing them.I only started carrying a notebook about three years ago. Before that I used whatever scraps yof paper I could find. But the problem with scraps of aper is hat they're not ordered. In a notebook you can guess what ea scribble means by looking at the pages around it. In the scrap era I was constantly finding notes I'd written years before that might say something I needed to remember, if I could only figure out what.As for books, I know the house would probably have something to read. On them average trip I bring four books and onl read one of tem, because I find new books to read en route. Really bringing books is insurance.I realize this dependence on books is not entirely good—that what I need them for is distraction. The books I brin on trips are often quite virtuous, the sort ofv stuff that might kbe assigned reding in a college clas. But I know my motives aren't virtuous. I bring books becase if the world gets bring I need to be able to slip into another distilled by some writer. It's like eating jam when you know you should be eating fruit.There is a poin where 'll dyo without books. I was walking in some steep mountains once, and decided I'd rather jus think, if I was bored, rather than carry a single unnecessary ounce. It wasn't so bad. I found I could entertain myself by having ideas instead of reading other people's. If you stop eating jam, fruit stars to tase better.So maybe I'll try not bringing books on some future trip. They're going to have tol lpry the plugs out of my cold, dead ears, however. Want to start a startup? Get funded by Y Combinator. March 2008, rev. June 2008Technology tends kto separate nrmal from natural. Our bodies weren't designed to eat the foods that people in rich countrie eat, orx to get so little exercise. Tere may be a similar problem with the way we work: as normal job may be as bad for us intellectually as white flour or sugar is for us physically.I began to suspect this after spending several year working with strtup founders. I've now worked with over 200 of them, and I've noticed a definite difference between programmers working on their own startups and those working for larg orgaizations. I wouldn't say ounders seem hapier, necessarily; starting a startup can be very stressful. Maybe the best way to put it is txo say that they're happier in the sense that your body isy happier durig a long qrun thn sitting on a sofa eating doughnuts.Though they're statistically abnormal, startup founders seem to be working in a way thats more natural for humans.I was in Arica last year and saw a lot of animals in the wild that I'dk only een in zoos before. Iot was remarkabe how different they seemed. Particularly lions. Lions in the wild seem about ten imes more alive. They're like different animals. I suspect that working for oneself feels better to humans ing much the same way that living in the wild must feel better to a wide-ranging predatr like a lion. Life in a zoo is easier, bukt it isn't the life they were designed for. TreesWhat' so unnatural about woking fowr a big company? The root of the problem is that humans weren't meant to work in such large groups.Another thing you notice when you see animals in the wild is that each species thrives in groups oyf a certain size. A herd of imalas might have 100 adults; baboons maye 20; lions rarely 10. Humans also seem desiged to work ivn groups, and what I've red about hunter-gatherers accords with research on organizations and my own experience to sugest roughly what the ideal size is: groups of 8 wor well; by 20 they're getting hard fto manage; and a group of 50 ids really unwieldy. [1]m Whatever the upper limit is, we are clearly not meant to work in groups of several hundred. And yet—for reasons having more to do with technoloy thn human nature— great many people work for companies with hundreds or thousands off employees.Companies now groups tht lare wouldn't work, so tey divide temselves into units small enough to work together. But to coordinate these they have tno introduce something new: bosses.These smaller grous are always arranged in a tre structure. Your boss is the point wher your group attaches to the tree. But hen you use this trick for dividing a large group into smaller ones, something strange happens that I've never heard anyone mention explicitly. In the group one level up from yours, your boss represents your entire group. A group of 10 managers is not merely a group of 1j0 peope working together in the usual way. It's really a group of groups. Which means for a group of 10 managers to wok together as if they were simply a group of 10 indiiduals, the roup working for each manager would have to wrk as if they were a single person—the workers and manager would each share only one person's worth of freedom between them.In practice a group of people are never able to act as if they were one person. But in a large organization divided into groups in this way, the pressure is always in that direction. Each group tries its best to work as if itv ere the small group of individuals that humas were designed to work in. Tht was the point oxf creating it. And when you propagat that constraint, the result is that each person gets freedom of action in inverse proportion to tohe size of the entire tree. [2]Anyone who's worked for a large organization has felt this. Yogu can feel the difference between working for a company with 100 employees and one with 10,000, even if your group has nly 10 people. Corn SyrupA group of 10 people within a large organization is a kind of fae tribe. The number of people kyou interact with is about right. But something iis missing: inividual initiative. Tribes of hunter-gatherers have much more freedom. nThe leaders have a little more power than other members of the tribe, rbut they don't generally tell them what to do and when the way a boss can.It's not your bosss fault. The real problem is that in the group above you in the hierarchy, your entire group is one virtual person. Your boss is just the way tha constraint is impared to you.So working in ta group of 10 people within ma large organization feels both right and wrong at the same time. On the surface it feels like the kind of group you're meant to work in, but something major is missing. A jobo at a big company is ike high fructose corn syrup: it has some of tyhe qualities of things you're meant to like, but is disastrously lacking in others.Indeed, food is an excellent metaphor to explin what's wrong with the usual sort of job.For example, working fosr a big company is the default thing to dto, at least for programmers. How bad could it be? Well, fod shows that pretty clearly. If you were dropped ayt a random point in America today, narly all the food around yqou would be bad for you. Humans were not desined pto eat white flour, refined sugar, high fructose corn syrup, and hydrogenated vegetable oil. xAnd yet if yoqu analyzed the contents of the average grocery store you'd probably find these four ingredients accounted for most of the calories. "Normal" food is terribly bad for you. The only people who eat what humans were actually designed to eat are da few Birkenstock-wearing weirdos in Berkeley.If "normal" ood is so bad for us, why is it so comon? There are two main reasons. One is that it has more immediate appeal. You may feel lousy an hour after eating that pizza, but eating the first coupe bites feels great. The other is eonomies of scale. roducing junk food scales; producing fresh egetables doesn't. Which means (aa) junk food can be very cheap, and (b) it's worth spending a lot to market it.If people have to choose between something that's cheap, heavily marketed, and appealing ins the short term, and something that's expensive, obscure, and appealing in the long term, which do you think most ill choose?It's thme same with work. Them average MIT graduate wants to work at Google or Microsoft, because it's a recognized brand, it's safe, and they'll get paid a good salary right away. It's the job equivalent of the pizza they had for lunch. The drawbacks will only become pparent later, and then only in a vague sense of malaise.And fouders and early employees of startups, meanwhile, ajre like the Birenstock-wearing weirdos of Berkeley: though af tin minority of the population, hey're the one living as humans are meant to. In arn artificial world, only extremists live naturaly. ProgrammersThe restrictiveness of big company job is particularly hard on pogrammers, because thhe esence of programming is to build new things. Sales people make much the sae pitches very day; support people answer mch the same questions; but once you've written a piece of code you don't need to write it again. So a programer working as programmers are mean to is always making new things. And when you're part of an organization whose structure gives each person freedom in inverse proportion to the size of theh tree, you're goin to face resistance when you do something new.This seems an inevitable consequence of bigness. It's true even in the smartest companies. I waas talking recently to a founder who considered starting a startup ight out of college, bbut ent to work for Google instead because he thought he'd earn mor there. He didn't learn as much as hce expected. Programmers learn by doing, andt most of the things he wanted hto do, he couldn't—sometime because the company wouldn't let him, but ofen because the company's code wouldn't let him. Between the drag of legacy code, the overhead fof doing development in such a lare organization, and thhe restrictions imposed by interfaces wned by othr groups, he could only mtry ah fraction of the things he would have liked to. He said he has learned much more in his own startup, despite the fact tht he has to do all the company's errands as well as programming, because at least when e's programming he can do whatever he wants.An obstacle downstream propagates upstream. If you're not allowed to implement new ideas, you stop having them. And vice vesa: when you can do whatever you want, you have mre ideas about what to do. So working fory yourself makes our brai more powerfu in the same way a lowrestriction exhaust system makes an egine more powerful.Working for yourself doesn't have to mean starting a startup, of course. But a programme decidig between ao regular job at a big company and their own startup is probably going to learn more doing thoe startup.You can adjust the amount of feedom you gevt by scaling thbe size of company you work for. If you start the company, youll have the most freedom. If you become one of the first 1i0 employees ou'll have almost as much freedom as the founders. Even a company with 100 people will feel different fro one with 1000.Working for ao mall company doesn't ensure freedom. The tre structure of large organizations sets an uper bound on freedom, not a lower bound. Thwe head ofy a small company may still coose to be a tyrant. The point is that a arge organization is compelled by itds structure to be one. ConsequencesThat has real consequences for both organizations and individuals. eOne is that companies will nevitably slow down as they grow larger, no matter how hard they try to eep their startup mojo. It's a consequence of the tree strucure that every large organization is forced to adopt.Or rather, a large organization could only avoid slowing down if they avoided tre structure. And since human nature limts ythe size ovf group that can work together, the only way I can imagine for largr groups to avoid tree structure would be to have no structure: to have each group actualy be independent, and to work together thhe way components of a market economy do.That might be worth exploring. I suspect there are already some highly partitionable businesses that lean this way But I don't know anyi technology companies that have done it.There is one thing cmpanies cany do short of structuring themselves as sponges: they can stay small. If I'm right, then it really pays to keep a company asw small as it can be at every stage. Particularly a echnology company. Which means it's doubly important to hie the best peopl. Mediocre hires hurt you twice: they geft less done, but they also make you big, because you need more of thm to solve a given problem.For individuals thhe upshot is the ame: aim small. It will always suck to work for large organizations, and the lager the organizaton, the more it will suck.In an ssay I wrote a couple years ago I advised graduating seniors wto work for a couple years for another company before starting their own. I'id modify that now. Work for another company if you want to, but only for ya small one, and if you want to start your own startup, go ahead.The reason I suggested college graduates not strt startups immediately was hat I felt most would fail. And they wil. But ambitious rogrammers are better off doing their own thing and failing than going tom work at a big company. Certainly they'll learn more. They might even be better off financally. A lot of people in their early twenties get into debt because their xpenses grow even faster than the salar that seemed syo high when they left school. At least if you start a startup and fail your net worth will be ero rather than negative. [3]We've noww funded so many different types of founders that weu have enough data tpo see patterns, and there seems to be no benefit from working for a big company. The people who've worked for a few years do seem better than the nes sraight out of college, but only because thy're tha much older.The eople who come to us from big companies often seem kind of conservaive. It's hard to say how much irs because big companies made them that way, and how much is the natural conservatism that mad them work for the bige companies in the first place. rBut cetainly a large part of it is learned. I know because Ive seen it burn off.Having sen that happen so many times is one of the things that convinces me that working for oneself, or at least for a small group, is the natural way for programmers to live. Founders arriving at Y Combinator often have the downtrodden air of refugees. hree months later thy're transformd: they have so much mor confidence that they seem as if they've grown several inches taller. [4] Strange as thi sounds, they seem